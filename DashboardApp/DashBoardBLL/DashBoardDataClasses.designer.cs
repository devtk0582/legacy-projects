#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.544
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DashBoardBLL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ketestserver")]
	public partial class DashBoardDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertState(State instance);
    partial void UpdateState(State instance);
    partial void DeleteState(State instance);
    partial void InsertMovie(Movie instance);
    partial void UpdateMovie(Movie instance);
    partial void DeleteMovie(Movie instance);
    partial void InsertMovieType(MovieType instance);
    partial void UpdateMovieType(MovieType instance);
    partial void DeleteMovieType(MovieType instance);
    partial void InsertTeam(Team instance);
    partial void UpdateTeam(Team instance);
    partial void DeleteTeam(Team instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public DashBoardDataClassesDataContext() : 
				base(global::DashBoardBLL.Properties.Settings.Default.ketestserverConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DashBoardDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DashBoardDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DashBoardDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DashBoardDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<State> States
		{
			get
			{
				return this.GetTable<State>();
			}
		}
		
		public System.Data.Linq.Table<Movie> Movies
		{
			get
			{
				return this.GetTable<Movie>();
			}
		}
		
		public System.Data.Linq.Table<MovieType> MovieTypes
		{
			get
			{
				return this.GetTable<MovieType>();
			}
		}
		
		public System.Data.Linq.Table<Team> Teams
		{
			get
			{
				return this.GetTable<Team>();
			}
		}
		
		public System.Data.Linq.Table<StatesPopulation> StatesPopulations
		{
			get
			{
				return this.GetTable<StatesPopulation>();
			}
		}
		
		public System.Data.Linq.Table<TeamChamp> TeamChamps
		{
			get
			{
				return this.GetTable<TeamChamp>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<TypeMovie> TypeMovies
		{
			get
			{
				return this.GetTable<TypeMovie>();
			}
		}
		
		public System.Data.Linq.Table<StateUser> StateUsers
		{
			get
			{
				return this.GetTable<StateUser>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_Register")]
		public int DB_Register([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string first_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string last_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string email, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(50)")] string phone)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), first_name, last_name, username, password, email, phone);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_GetStateUsers")]
		public ISingleResult<DB_GetStateUsersResult> DB_GetStateUsers([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> state_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), state_id);
			return ((ISingleResult<DB_GetStateUsersResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_GetStatePopulations")]
		public ISingleResult<DB_GetStatePopulationsResult> DB_GetStatePopulations([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> state_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), state_id);
			return ((ISingleResult<DB_GetStatePopulationsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_GetTeamChampions")]
		public ISingleResult<DB_GetTeamChampionsResult> DB_GetTeamChampions([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> team_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), team_id);
			return ((ISingleResult<DB_GetTeamChampionsResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_GetTypeMovies")]
		public ISingleResult<DB_GetTypeMoviesResult> DB_GetTypeMovies([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> type_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), type_id);
			return ((ISingleResult<DB_GetTypeMoviesResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DB_GetTypeMoviesFiltered")]
		public ISingleResult<DB_GetTypeMoviesFilteredResult> DB_GetTypeMoviesFiltered([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> startDate, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="DateTime")] System.Nullable<System.DateTime> endDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), startDate, endDate);
			return ((ISingleResult<DB_GetTypeMoviesFilteredResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.States")]
	public partial class State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StateID;
		
		private string _StateName;
		
		private string _StateCode;
		
		private System.Nullable<char> _Area;
		
		private System.Nullable<int> _Population;
		
		private EntitySet<Team> _Teams;
		
		private EntitySet<User> _Users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStateIDChanging(int value);
    partial void OnStateIDChanged();
    partial void OnStateNameChanging(string value);
    partial void OnStateNameChanged();
    partial void OnStateCodeChanging(string value);
    partial void OnStateCodeChanged();
    partial void OnAreaChanging(System.Nullable<char> value);
    partial void OnAreaChanged();
    partial void OnPopulationChanging(System.Nullable<int> value);
    partial void OnPopulationChanged();
    #endregion
		
		public State()
		{
			this._Teams = new EntitySet<Team>(new Action<Team>(this.attach_Teams), new Action<Team>(this.detach_Teams));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this.OnStateIDChanging(value);
					this.SendPropertyChanging();
					this._StateID = value;
					this.SendPropertyChanged("StateID");
					this.OnStateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(30)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this.OnStateNameChanging(value);
					this.SendPropertyChanging();
					this._StateName = value;
					this.SendPropertyChanged("StateName");
					this.OnStateNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(5)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this.OnStateCodeChanging(value);
					this.SendPropertyChanging();
					this._StateCode = value;
					this.SendPropertyChanged("StateCode");
					this.OnStateCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Char(1)")]
		public System.Nullable<char> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int")]
		public System.Nullable<int> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this.OnPopulationChanging(value);
					this.SendPropertyChanging();
					this._Population = value;
					this.SendPropertyChanged("Population");
					this.OnPopulationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Team", Storage="_Teams", ThisKey="StateID", OtherKey="TeamState")]
		public EntitySet<Team> Teams
		{
			get
			{
				return this._Teams;
			}
			set
			{
				this._Teams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_User", Storage="_Users", ThisKey="StateID", OtherKey="State")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.State = this;
		}
		
		private void detach_Teams(Team entity)
		{
			this.SendPropertyChanging();
			entity.State = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.State1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.State1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Movies")]
	public partial class Movie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MovieID;
		
		private string _MovieName;
		
		private System.Nullable<System.DateTime> _MovieDate;
		
		private System.Nullable<int> _MovieType;
		
		private string _MovieComment;
		
		private System.Nullable<int> _Review;
		
		private EntityRef<MovieType> _MovieType1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMovieIDChanging(int value);
    partial void OnMovieIDChanged();
    partial void OnMovieNameChanging(string value);
    partial void OnMovieNameChanged();
    partial void OnMovieDateChanging(System.Nullable<System.DateTime> value);
    partial void OnMovieDateChanged();
    partial void OnMovieTypeChanging(System.Nullable<int> value);
    partial void OnMovieTypeChanged();
    partial void OnMovieCommentChanging(string value);
    partial void OnMovieCommentChanged();
    partial void OnReviewChanging(System.Nullable<int> value);
    partial void OnReviewChanged();
    #endregion
		
		public Movie()
		{
			this._MovieType1 = default(EntityRef<MovieType>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MovieID
		{
			get
			{
				return this._MovieID;
			}
			set
			{
				if ((this._MovieID != value))
				{
					this.OnMovieIDChanging(value);
					this.SendPropertyChanging();
					this._MovieID = value;
					this.SendPropertyChanged("MovieID");
					this.OnMovieIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieName", DbType="VarChar(50)")]
		public string MovieName
		{
			get
			{
				return this._MovieName;
			}
			set
			{
				if ((this._MovieName != value))
				{
					this.OnMovieNameChanging(value);
					this.SendPropertyChanging();
					this._MovieName = value;
					this.SendPropertyChanged("MovieName");
					this.OnMovieNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MovieDate
		{
			get
			{
				return this._MovieDate;
			}
			set
			{
				if ((this._MovieDate != value))
				{
					this.OnMovieDateChanging(value);
					this.SendPropertyChanging();
					this._MovieDate = value;
					this.SendPropertyChanged("MovieDate");
					this.OnMovieDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieType", DbType="Int")]
		public System.Nullable<int> MovieType
		{
			get
			{
				return this._MovieType;
			}
			set
			{
				if ((this._MovieType != value))
				{
					if (this._MovieType1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMovieTypeChanging(value);
					this.SendPropertyChanging();
					this._MovieType = value;
					this.SendPropertyChanged("MovieType");
					this.OnMovieTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieComment", DbType="VarChar(200)")]
		public string MovieComment
		{
			get
			{
				return this._MovieComment;
			}
			set
			{
				if ((this._MovieComment != value))
				{
					this.OnMovieCommentChanging(value);
					this.SendPropertyChanging();
					this._MovieComment = value;
					this.SendPropertyChanged("MovieComment");
					this.OnMovieCommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Review", DbType="Int")]
		public System.Nullable<int> Review
		{
			get
			{
				return this._Review;
			}
			set
			{
				if ((this._Review != value))
				{
					this.OnReviewChanging(value);
					this.SendPropertyChanging();
					this._Review = value;
					this.SendPropertyChanged("Review");
					this.OnReviewChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieType_Movie", Storage="_MovieType1", ThisKey="MovieType", OtherKey="TypeID", IsForeignKey=true)]
		public MovieType MovieType1
		{
			get
			{
				return this._MovieType1.Entity;
			}
			set
			{
				MovieType previousValue = this._MovieType1.Entity;
				if (((previousValue != value) 
							|| (this._MovieType1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MovieType1.Entity = null;
						previousValue.Movies.Remove(this);
					}
					this._MovieType1.Entity = value;
					if ((value != null))
					{
						value.Movies.Add(this);
						this._MovieType = value.TypeID;
					}
					else
					{
						this._MovieType = default(Nullable<int>);
					}
					this.SendPropertyChanged("MovieType1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MovieTypes")]
	public partial class MovieType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TypeID;
		
		private string _TypeName;
		
		private EntitySet<Movie> _Movies;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTypeIDChanging(int value);
    partial void OnTypeIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public MovieType()
		{
			this._Movies = new EntitySet<Movie>(new Action<Movie>(this.attach_Movies), new Action<Movie>(this.detach_Movies));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(20)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MovieType_Movie", Storage="_Movies", ThisKey="TypeID", OtherKey="MovieType")]
		public EntitySet<Movie> Movies
		{
			get
			{
				return this._Movies;
			}
			set
			{
				this._Movies.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Movies(Movie entity)
		{
			this.SendPropertyChanging();
			entity.MovieType1 = this;
		}
		
		private void detach_Movies(Movie entity)
		{
			this.SendPropertyChanging();
			entity.MovieType1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Teams")]
	public partial class Team : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TeamID;
		
		private string _TeamName;
		
		private System.Nullable<int> _TeamState;
		
		private string _TeamStars;
		
		private string _Arena;
		
		private string _HeadCoach;
		
		private System.Nullable<int> _Champions;
		
		private System.Nullable<int> _Founded;
		
		private EntitySet<User> _Users;
		
		private EntityRef<State> _State;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTeamIDChanging(int value);
    partial void OnTeamIDChanged();
    partial void OnTeamNameChanging(string value);
    partial void OnTeamNameChanged();
    partial void OnTeamStateChanging(System.Nullable<int> value);
    partial void OnTeamStateChanged();
    partial void OnTeamStarsChanging(string value);
    partial void OnTeamStarsChanged();
    partial void OnArenaChanging(string value);
    partial void OnArenaChanged();
    partial void OnHeadCoachChanging(string value);
    partial void OnHeadCoachChanged();
    partial void OnChampionsChanging(System.Nullable<int> value);
    partial void OnChampionsChanged();
    partial void OnFoundedChanging(System.Nullable<int> value);
    partial void OnFoundedChanged();
    #endregion
		
		public Team()
		{
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._State = default(EntityRef<State>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this.OnTeamIDChanging(value);
					this.SendPropertyChanging();
					this._TeamID = value;
					this.SendPropertyChanged("TeamID");
					this.OnTeamIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="VarChar(30)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this.OnTeamNameChanging(value);
					this.SendPropertyChanging();
					this._TeamName = value;
					this.SendPropertyChanged("TeamName");
					this.OnTeamNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamState", DbType="Int")]
		public System.Nullable<int> TeamState
		{
			get
			{
				return this._TeamState;
			}
			set
			{
				if ((this._TeamState != value))
				{
					if (this._State.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamStateChanging(value);
					this.SendPropertyChanging();
					this._TeamState = value;
					this.SendPropertyChanged("TeamState");
					this.OnTeamStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamStars", DbType="VarChar(100)")]
		public string TeamStars
		{
			get
			{
				return this._TeamStars;
			}
			set
			{
				if ((this._TeamStars != value))
				{
					this.OnTeamStarsChanging(value);
					this.SendPropertyChanging();
					this._TeamStars = value;
					this.SendPropertyChanged("TeamStars");
					this.OnTeamStarsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arena", DbType="VarChar(50)")]
		public string Arena
		{
			get
			{
				return this._Arena;
			}
			set
			{
				if ((this._Arena != value))
				{
					this.OnArenaChanging(value);
					this.SendPropertyChanging();
					this._Arena = value;
					this.SendPropertyChanged("Arena");
					this.OnArenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadCoach", DbType="VarChar(50)")]
		public string HeadCoach
		{
			get
			{
				return this._HeadCoach;
			}
			set
			{
				if ((this._HeadCoach != value))
				{
					this.OnHeadCoachChanging(value);
					this.SendPropertyChanging();
					this._HeadCoach = value;
					this.SendPropertyChanged("HeadCoach");
					this.OnHeadCoachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Champions", DbType="Int")]
		public System.Nullable<int> Champions
		{
			get
			{
				return this._Champions;
			}
			set
			{
				if ((this._Champions != value))
				{
					this.OnChampionsChanging(value);
					this.SendPropertyChanging();
					this._Champions = value;
					this.SendPropertyChanged("Champions");
					this.OnChampionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Founded", DbType="Int")]
		public System.Nullable<int> Founded
		{
			get
			{
				return this._Founded;
			}
			set
			{
				if ((this._Founded != value))
				{
					this.OnFoundedChanging(value);
					this.SendPropertyChanging();
					this._Founded = value;
					this.SendPropertyChanged("Founded");
					this.OnFoundedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_User", Storage="_Users", ThisKey="TeamID", OtherKey="Team")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_Team", Storage="_State", ThisKey="TeamState", OtherKey="StateID", IsForeignKey=true)]
		public State State
		{
			get
			{
				return this._State.Entity;
			}
			set
			{
				State previousValue = this._State.Entity;
				if (((previousValue != value) 
							|| (this._State.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State.Entity = null;
						previousValue.Teams.Remove(this);
					}
					this._State.Entity = value;
					if ((value != null))
					{
						value.Teams.Add(this);
						this._TeamState = value.StateID;
					}
					else
					{
						this._TeamState = default(Nullable<int>);
					}
					this.SendPropertyChanged("State");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Team1 = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Team1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StatesPopulation")]
	public partial class StatesPopulation
	{
		
		private string _StateCode;
		
		private System.Nullable<int> _Population;
		
		private int _StateID;
		
		public StatesPopulation()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(5)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int")]
		public System.Nullable<int> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this._Population = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TeamChamps")]
	public partial class TeamChamp
	{
		
		private string _TeamName;
		
		private System.Nullable<int> _Champions;
		
		private int _TeamID;
		
		public TeamChamp()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="VarChar(30)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Champions", DbType="Int")]
		public System.Nullable<int> Champions
		{
			get
			{
				return this._Champions;
			}
			set
			{
				if ((this._Champions != value))
				{
					this._Champions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamID", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int TeamID
		{
			get
			{
				return this._TeamID;
			}
			set
			{
				if ((this._TeamID != value))
				{
					this._TeamID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserID;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _UserName;
		
		private string _Password;
		
		private string _Email;
		
		private string _Phone;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _State;
		
		private System.Nullable<int> _Team;
		
		private EntityRef<State> _State1;
		
		private EntityRef<Team> _Team1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnStateChanging(System.Nullable<int> value);
    partial void OnStateChanged();
    partial void OnTeamChanging(System.Nullable<int> value);
    partial void OnTeamChanged();
    #endregion
		
		public User()
		{
			this._State1 = default(EntityRef<State>);
			this._Team1 = default(EntityRef<Team>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(50)")]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(50)")]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Int")]
		public System.Nullable<int> State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					if (this._State1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Team", DbType="Int")]
		public System.Nullable<int> Team
		{
			get
			{
				return this._Team;
			}
			set
			{
				if ((this._Team != value))
				{
					if (this._Team1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTeamChanging(value);
					this.SendPropertyChanging();
					this._Team = value;
					this.SendPropertyChanged("Team");
					this.OnTeamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="State_User", Storage="_State1", ThisKey="State", OtherKey="StateID", IsForeignKey=true)]
		public State State1
		{
			get
			{
				return this._State1.Entity;
			}
			set
			{
				State previousValue = this._State1.Entity;
				if (((previousValue != value) 
							|| (this._State1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._State1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._State1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._State = value.StateID;
					}
					else
					{
						this._State = default(Nullable<int>);
					}
					this.SendPropertyChanged("State1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Team_User", Storage="_Team1", ThisKey="Team", OtherKey="TeamID", IsForeignKey=true)]
		public Team Team1
		{
			get
			{
				return this._Team1.Entity;
			}
			set
			{
				Team previousValue = this._Team1.Entity;
				if (((previousValue != value) 
							|| (this._Team1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Team1.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Team1.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._Team = value.TeamID;
					}
					else
					{
						this._Team = default(Nullable<int>);
					}
					this.SendPropertyChanged("Team1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TypeMovies")]
	public partial class TypeMovie
	{
		
		private int _TypeID;
		
		private string _TypeName;
		
		private System.Nullable<int> _MoviesCount;
		
		public TypeMovie()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(20)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoviesCount", DbType="Int")]
		public System.Nullable<int> MoviesCount
		{
			get
			{
				return this._MoviesCount;
			}
			set
			{
				if ((this._MoviesCount != value))
				{
					this._MoviesCount = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StateUsers")]
	public partial class StateUser
	{
		
		private int _StateID;
		
		private string _StateName;
		
		private System.Nullable<int> _UserCount;
		
		public StateUser()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateID", DbType="Int NOT NULL")]
		public int StateID
		{
			get
			{
				return this._StateID;
			}
			set
			{
				if ((this._StateID != value))
				{
					this._StateID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(30)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserCount", DbType="Int")]
		public System.Nullable<int> UserCount
		{
			get
			{
				return this._UserCount;
			}
			set
			{
				if ((this._UserCount != value))
				{
					this._UserCount = value;
				}
			}
		}
	}
	
	public partial class DB_GetStateUsersResult
	{
		
		private string _Name;
		
		private string _UserName;
		
		private string _Email;
		
		private string _Phone;
		
		private string _StateCode;
		
		private string _TeamName;
		
		public DB_GetStateUsersResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(101)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this._UserName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(20)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(5)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="VarChar(30)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
	}
	
	public partial class DB_GetStatePopulationsResult
	{
		
		private string _StateName;
		
		private string _StateCode;
		
		private System.Nullable<int> _Population;
		
		private System.Nullable<char> _Area;
		
		public DB_GetStatePopulationsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateName", DbType="VarChar(30)")]
		public string StateName
		{
			get
			{
				return this._StateName;
			}
			set
			{
				if ((this._StateName != value))
				{
					this._StateName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(5)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Population", DbType="Int")]
		public System.Nullable<int> Population
		{
			get
			{
				return this._Population;
			}
			set
			{
				if ((this._Population != value))
				{
					this._Population = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Char(1)")]
		public System.Nullable<char> Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this._Area = value;
				}
			}
		}
	}
	
	public partial class DB_GetTeamChampionsResult
	{
		
		private string _TeamName;
		
		private string _StateCode;
		
		private string _Arena;
		
		private string _HeadCoach;
		
		private System.Nullable<int> _Champions;
		
		private System.Nullable<int> _Founded;
		
		public DB_GetTeamChampionsResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeamName", DbType="VarChar(30)")]
		public string TeamName
		{
			get
			{
				return this._TeamName;
			}
			set
			{
				if ((this._TeamName != value))
				{
					this._TeamName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StateCode", DbType="VarChar(5)")]
		public string StateCode
		{
			get
			{
				return this._StateCode;
			}
			set
			{
				if ((this._StateCode != value))
				{
					this._StateCode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Arena", DbType="VarChar(50)")]
		public string Arena
		{
			get
			{
				return this._Arena;
			}
			set
			{
				if ((this._Arena != value))
				{
					this._Arena = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HeadCoach", DbType="VarChar(50)")]
		public string HeadCoach
		{
			get
			{
				return this._HeadCoach;
			}
			set
			{
				if ((this._HeadCoach != value))
				{
					this._HeadCoach = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Champions", DbType="Int")]
		public System.Nullable<int> Champions
		{
			get
			{
				return this._Champions;
			}
			set
			{
				if ((this._Champions != value))
				{
					this._Champions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Founded", DbType="Int")]
		public System.Nullable<int> Founded
		{
			get
			{
				return this._Founded;
			}
			set
			{
				if ((this._Founded != value))
				{
					this._Founded = value;
				}
			}
		}
	}
	
	public partial class DB_GetTypeMoviesResult
	{
		
		private string _TypeName;
		
		private string _MovieName;
		
		private System.Nullable<System.DateTime> _MovieDate;
		
		private string _MovieComment;
		
		public DB_GetTypeMoviesResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(20)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieName", DbType="VarChar(50)")]
		public string MovieName
		{
			get
			{
				return this._MovieName;
			}
			set
			{
				if ((this._MovieName != value))
				{
					this._MovieName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> MovieDate
		{
			get
			{
				return this._MovieDate;
			}
			set
			{
				if ((this._MovieDate != value))
				{
					this._MovieDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MovieComment", DbType="VarChar(200)")]
		public string MovieComment
		{
			get
			{
				return this._MovieComment;
			}
			set
			{
				if ((this._MovieComment != value))
				{
					this._MovieComment = value;
				}
			}
		}
	}
	
	public partial class DB_GetTypeMoviesFilteredResult
	{
		
		private int _TypeID;
		
		private string _TypeName;
		
		private System.Nullable<int> _MoviesCount;
		
		public DB_GetTypeMoviesFilteredResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int NOT NULL")]
		public int TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this._TypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="VarChar(20)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this._TypeName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoviesCount", DbType="Int")]
		public System.Nullable<int> MoviesCount
		{
			get
			{
				return this._MoviesCount;
			}
			set
			{
				if ((this._MoviesCount != value))
				{
					this._MoviesCount = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
